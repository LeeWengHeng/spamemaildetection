# -*- coding: utf-8 -*-
"""train and save model

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1vIaJvtK4E2r23-5OFyIDjxpxzT-2j4Lc
"""

# 1. Import and load dataset
# make sure the data is labeled
import pandas as pd
import re
import string
import joblib

# Load the dataset
data = pd.read_csv('spam_ham_dataset.csv')
data = data[['label', 'text']]

#2. Clean text
# remove words with numbers
alphanumeric = lambda x: re.sub(r"""\w*\d\w*""", '', x)
# remove punctuation & convert to lowercase
punc_lower = lambda x: re.sub('[%s]' % re.escape(string.punctuation), ' ', x.lower())

data['text'] = data['text'].map(alphanumeric).map(punc_lower)

# Features (X) and labels (y)
X = data.text
y = data.label

# Split into train/test
from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(
    X, y, test_size=0.3, random_state=42
)

# 3. Vectorize text data
from sklearn.feature_extraction.text import CountVectorizer
cv = CountVectorizer(stop_words='english')
X_train_cv = cv.fit_transform(X_train)
X_test_cv = cv.transform(X_test)

# 4. Train the Logistic Regression model
from sklearn.ensemble import RandomForestClassifier
rf = RandomForestClassifier(n_estimators=300, random_state=42, n_jobs=-1)
rf.fit(X_train_cv, y_train)

# 5. Evaluate the model (optional, for verification)
from sklearn.metrics import classification_report, accuracy_score
y_pred_cv = lr.predict(X_test_cv)
print("\n=== Logistic Regression Results ===")
print(classification_report(y_test, y_pred_cv))
print("Accuracy score for LR:", round(accuracy_score(y_test, y_pred_cv), 3))

# 6. Save the trained model and the vectorizer
# This is the crucial step for deployment
joblib.dump(lr, 'model.joblib')
joblib.dump(cv, 'vectorizer.joblib')

print("\nModel and vectorizer saved to model.joblib and vectorizer.joblib")
print("These two files must be uploaded to your GitHub repository.")