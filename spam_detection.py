# -*- coding: utf-8 -*-
"""spam detection

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/16jtbj1KMjbtobfV5j9mt3SQq5oJhPj00
"""

#import streamlit as st
import joblib
import re
import string

# --- Load the saved model and vectorizer ---
# These files should be in the same GitHub repository
try:
    model = joblib.load('model.joblib')
    vectorizer = joblib.load('vectorizer.joblib')
except FileNotFoundError:
    st.error("Model files not found. Please ensure 'model.joblib' and 'vectorizer.joblib' are in the same directory.")
    st.stop()

# --- Helper function for text cleaning ---
def clean_text(text):
    """
    Cleans a given string by removing alphanumeric characters
    and punctuation, and converting to lowercase.
    """
    alphanumeric = lambda x: re.sub(r"""\w*\d\w*""", '', x)
    punc_lower = lambda x: re.sub('[%s]' % re.escape(string.punctuation), ' ', x.lower())

    cleaned_text = alphanumeric(text)
    cleaned_text = punc_lower(cleaned_text)
    return cleaned_text

# --- Streamlit UI and Logic ---
st.set_page_config(
    page_title="Spam Email Detector",
    page_icon="ðŸ“§"
)

st.title("Spam Email Detector")
st.markdown("Enter an email message below and I'll tell you if it's spam or not.")

# Text area for user input
user_input = st.text_area(
    "Enter the email message:",
    placeholder="Example: You've won a new iPhone! Click here to claim your prize.",
    height=200
)


# Predict button
if st.button("Predict"):
    if user_input:
        # 1. Clean the input text
        cleaned_input = clean_text(user_input)

        # 2. Vectorize the cleaned text
        vectorized_input = vectorizer.transform([cleaned_input])

        # 3. Make a prediction
        prediction = model.predict(vectorized_input)

        # 4. Display the result
        st.subheader("Prediction:")
        if prediction[0] == 'spam':
            st.error("This is a SPAM email.")

        else:
            st.success("This is a NORMAL email.")

    else:
        st.warning("Please enter some text to get a prediction.")

# Add some helpful information at the bottom
st.markdown("---")
st.markdown("This uses a Logistic Regression model trained on a dataset of spam and ham emails.")